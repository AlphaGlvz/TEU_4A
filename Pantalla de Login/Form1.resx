<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbx1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhyADIAPQAAJCQ8LCw8NDQ8AAAAAAA0AAAcPDw8HAAAEAAAHBwUBAQAJCQcMCAQLAAAMCwgMDA
        oOCwcEAwEEBAIGBQMGBgQPDgUPCQMPBgAPAwAGhoYAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBF
        Mi4wAwEAAAAh/rJHYW1lIC4uLi4uLi4uIFNVUEVSIFZFSElDTEUtMDAxIE1FVEFMIFNMVUcNClN5c3Rl
        bSAuLi4uLi4gTkVPt0dFTyBNVlMNCkNvbXBhbnkgLi4uLi4gTkFaQ0EgQ09SUE9SQVRJT04NClJpcCBi
        eSAuLi4uLi4gWmpveUtpTGVyIChTYXJhaCBTaG9s+iBHaXR6YWltYW5pKQ0KRGF0ZSAuLi4uLi4uLiAy
        Ni8wOC8xOTk4ACH5BAWWAAAALAAAAADIAMgAAAX/ICCOZGmeaKqubOu+cCzPdG3feK7vfO//wKBwSCwa
        j8ikcslsOp/QqHRKrVqv2Kx2y+16v+CweEwum8/otHrNbrvf8Lh8Tq/b7/i8fs/v+/+AgYKDhIWGh4iJ
        iouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq+wsbKztLW2t7i5uru8vb6/wMHCw8TF
        xsfIycrLzM3Oz9DR0tPU1dbX2Nna29zd3t/g4eLjiArm5+Hn6unq5uzt3ucLD/T169ny9fbo+Obz+g/u
        YcsHsN4CftUI6jPA8KA7awrrMTTgUMG1iPQmPljAEWE0hRNDMgz4UBpIkRo9/0I7idIASYvTzk2gQMFB
        S5QCm8mkafNmyJzMdtb0+VPlMnkOkiqdKKCgQaPHCDqgSUFjwYkVdfqjN5WmVYBYoRpTqFSAWacaOWZN
        xpKqA6cZR4oV1pYn3AcpS0bdGteA27t5YR719zWBBAkJ7uoDSkxe4cOJFdNjPMzxSHqGEUuePDeYuQRq
        03JMQFox6QQTOv9S93XBYQmK1VJQ7Yv15Y2vY3OcrXesuYJdKajVp1RtApqpexeTqvb1Pwdqo4+mXZsv
        dI7OuUqPnoB6L+bYDz/fbtw7r3bozUV47Xw7Vcqr07dbz14C+ffmb8mfX9++e5rwxbJfehEUKAFVVEnA
        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
</value>
  </data>
</root>